{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x6382856a731Af535CA6aea8D364FCE67457da438",
      "txHash": "0xa2d942b161708d428b5c5524ad9c777058763a375f7320374a7aeecd5eaaef1e",
      "kind": "uups"
    },
    {
      "address": "0x3f2d192F64020dA31D44289d62DB82adE6ABee6c",
      "txHash": "0x12d5c3da618dd3bf0d841acd5e4973660a3e2c59be5d361b25f2019d5409e9bb",
      "kind": "uups"
    },
    {
      "address": "0x4A5327347f077E72d2AaB19F68Ba8A7F12ec5d63",
      "txHash": "0xad2b09bb58930b19673421cbe6675b7ee2be1a85e17b2b53f53ed7f3ec3adc4b",
      "kind": "uups"
    },
    {
      "address": "0xe1877D33471E37Fe0F62d20E60c469eff83FB4A0",
      "txHash": "0x6643be22bc0f37ca61e5e2cea3dced3271d4d51483fc14e89a101dfbe50d46a8",
      "kind": "uups"
    }
  ],
  "impls": {
    "586ce8ca8caf81d46133ddcfc23a69602cb183d894031673bc8ac73980f05494": {
      "address": "0xC6F2579D5D9D1697D86bc093a5328Eff03B3b010",
      "txHash": "0x006edfebc21e70e67caa13e74bcbcddd710701fe10e3b6882e937415beb33f58",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Trace208)14638_storage)": {
            "label": "mapping(address => struct Checkpoints.Trace208)"
          },
          "t_struct(Trace208)14638_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)14643_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Checkpoint208)14643_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]"
          },
          "t_struct(Checkpoint208)14643_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48"
              },
              {
                "label": "_value",
                "type": "t_uint208"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint208": {
            "label": "uint208"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Votes": [
            {
              "contract": "VotesUpgradeable",
              "label": "_delegatee",
              "type": "t_mapping(t_address,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:41"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_delegateCheckpoints",
              "type": "t_mapping(t_address,t_struct(Trace208)14638_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:43"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_totalCheckpoints",
              "type": "t_struct(Trace208)14638_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:45"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "c11a72343db8aa032dca7131333b7aa9dfb95d4f3854f3a074fb0b81e89a3302": {
      "address": "0x431DD69503f5DAc4bD78be0Af215e184a8572f73",
      "txHash": "0x3b9c541d212a97f3bb68021ddf52e6341ee38eab66a220cd957cdab6788d3d07",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.TimelockController": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "deb241ed66005f5bf66b4d7c50257ad0745146fe989e68fc2570fa223b2db99d": {
      "address": "0x7B86888338D382D2aCD12a303F4224d217745FE0",
      "txHash": "0xe74d74c42c8c744e480347d569f2d741b30109efb0f08a18bb816cf7a38dc26c",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_proposerMode",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ProposerMode)18352",
            "contract": "REGGovernor",
            "src": "contracts/REGGovernor.sol:33"
          },
          {
            "label": "_incentiveEnabled",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "REGGovernor",
            "src": "contracts/REGGovernor.sol:35"
          },
          {
            "label": "_regIncentiveVault",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IREGIncentiveVault)18673",
            "contract": "REGGovernor",
            "src": "contracts/REGGovernor.sol:37"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IREGIncentiveVault)18673": {
            "label": "contract IREGIncentiveVault",
            "numberOfBytes": "20"
          },
          "t_enum(ProposerMode)18352": {
            "label": "enum IREGGovernor.ProposerMode",
            "members": [
              "ProposerWithRole",
              "ProposerWithVotingPower",
              "ProposerWithRoleAndVotingPower",
              "ProposerWithRoleOrVotingPower"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(TimelockControllerUpgradeable)3419": {
            "label": "contract TimelockControllerUpgradeable"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Trace208)14638_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)14643_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Checkpoint208)14643_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]"
          },
          "t_struct(Checkpoint208)14643_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48"
              },
              {
                "label": "_value",
                "type": "t_uint208"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint208": {
            "label": "uint208"
          },
          "t_contract(IERC5805)8527": {
            "label": "contract IERC5805"
          },
          "t_mapping(t_uint256,t_struct(ProposalVote)3446_storage)": {
            "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)"
          },
          "t_struct(ProposalVote)3446_storage": {
            "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
            "members": [
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)436_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)"
          },
          "t_struct(ProposalCore)436_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "voteStart",
                "type": "t_uint48"
              },
              {
                "label": "voteDuration",
                "type": "t_uint32"
              },
              {
                "label": "executed",
                "type": "t_bool"
              },
              {
                "label": "canceled",
                "type": "t_bool"
              },
              {
                "label": "etaSeconds",
                "type": "t_uint48"
              }
            ]
          },
          "t_struct(Bytes32Deque)15698_storage": {
            "label": "struct DoubleEndedQueue.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_uint128"
              },
              {
                "label": "_end",
                "type": "t_uint128"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_uint128,t_bytes32)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_uint128,t_bytes32)": {
            "label": "mapping(uint128 => bytes32)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorTimelockControl": [
            {
              "contract": "GovernorTimelockControlUpgradeable",
              "label": "_timelock",
              "type": "t_contract(TimelockControllerUpgradeable)3419",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "contract": "GovernorTimelockControlUpgradeable",
              "label": "_timelockIds",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:34"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorVotesQuorumFraction": [
            {
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "label": "_quorumNumeratorHistory",
              "type": "t_struct(Trace208)14638_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorVotes": [
            {
              "contract": "GovernorVotesUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC5805)8527",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:20"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorCountingSimple": [
            {
              "contract": "GovernorCountingSimpleUpgradeable",
              "label": "_proposalVotes",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)3446_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol:31"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorSettings": [
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_proposalThreshold",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:16"
            },
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_votingDelay",
              "type": "t_uint48",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_votingPeriod",
              "type": "t_uint32",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:20"
            }
          ],
          "erc7201:openzeppelin.storage.Governor": [
            {
              "contract": "GovernorUpgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:52"
            },
            {
              "contract": "GovernorUpgradeable",
              "label": "_proposals",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)436_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
            },
            {
              "contract": "GovernorUpgradeable",
              "label": "_governanceCall",
              "type": "t_struct(Bytes32Deque)15698_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:60"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "d76c0d41b1a942863e57df5ebcebbcbcd16414da2e3643e82624a0246e2fd5ce": {
      "address": "0x4b79755d1Ea8937c027408E3aA72D69a260f6237",
      "txHash": "0x0050c0d2fd4d9cecaa974784e8c1d004e99f7d65fb96bf45809f7efb232cd7bb",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_regGovernor",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "REGIncentiveVault",
            "src": "contracts/REGIncentiveVault.sol:26"
          },
          {
            "label": "_regToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)9637",
            "contract": "REGIncentiveVault",
            "src": "contracts/REGIncentiveVault.sol:28"
          },
          {
            "label": "_currentEpoch",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "REGIncentiveVault",
            "src": "contracts/REGIncentiveVault.sol:30"
          },
          {
            "label": "_currentTotalDeposit",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "REGIncentiveVault",
            "src": "contracts/REGIncentiveVault.sol:32"
          },
          {
            "label": "_userGlobalStates",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(UserGlobalState)18441_storage)",
            "contract": "REGIncentiveVault",
            "src": "contracts/REGIncentiveVault.sol:35"
          },
          {
            "label": "_userEpochStates",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserEpochState)18449_storage))",
            "contract": "REGIncentiveVault",
            "src": "contracts/REGIncentiveVault.sol:38"
          },
          {
            "label": "_epochStates",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(EpochState)18465_storage)",
            "contract": "REGIncentiveVault",
            "src": "contracts/REGIncentiveVault.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)9637": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserEpochState)18449_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IREGIncentiveVault.UserEpochState))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserGlobalState)18441_storage)": {
            "label": "mapping(address => struct IREGIncentiveVault.UserGlobalState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EpochState)18465_storage)": {
            "label": "mapping(uint256 => struct IREGIncentiveVault.EpochState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UserEpochState)18449_storage)": {
            "label": "mapping(uint256 => struct IREGIncentiveVault.UserEpochState)",
            "numberOfBytes": "32"
          },
          "t_struct(EpochState)18465_storage": {
            "label": "struct IREGIncentiveVault.EpochState",
            "members": [
              {
                "label": "subscriptionStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "subscriptionEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriodEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bonusToken",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalBonus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalWeights",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(UserEpochState)18449_storage": {
            "label": "struct IREGIncentiveVault.UserEpochState",
            "members": [
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UserGlobalState)18441_storage": {
            "label": "struct IREGIncentiveVault.UserGlobalState",
            "members": [
              {
                "label": "currentDeposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
