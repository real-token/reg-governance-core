{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x41047763D44435D2012565E0BE2bC68C16802B9D",
      "txHash": "0x4afab080ed29c0e499fbf23664c2977aa4d9fe72cd1c0c1fa3d9aae0064723e7",
      "kind": "uups"
    },
    {
      "address": "0x5f3Eae60aA4834DFC4F4972dC819535A685d37BA",
      "txHash": "0xc89d6cc5a53bb7db1541920e85041b98d5ac1a496b03322c4666319e8ed1e99c",
      "kind": "uups"
    },
    {
      "address": "0x7466Fd3Ce12e6aF2F054E462366318D7D7D63756",
      "txHash": "0xa36eebb6532f758cf018aca5c46217fd6d7532c735d57d91d022d92ff8c2fa23",
      "kind": "uups"
    },
    {
      "address": "0x0373CfFb3a5BA476A4025301F111197dCC48f9E1",
      "txHash": "0x97ee2ff47494f9c2a4c0ba4037b3455da24a1aa28aa1b2b9a31ac85b0eab6193",
      "kind": "uups"
    }
  ],
  "impls": {
    "586ce8ca8caf81d46133ddcfc23a69602cb183d894031673bc8ac73980f05494": {
      "address": "0x7255F2fA28fae6B82B17beD5d0b2cb80BEa197E2",
      "txHash": "0x6126e00d241e2009d99a953c5f96bb82d409b5c531086a77cff80ca8f623a72f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Trace208)13479_storage)": {
            "label": "mapping(address => struct Checkpoints.Trace208)"
          },
          "t_struct(Trace208)13479_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)13484_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Checkpoint208)13484_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]"
          },
          "t_struct(Checkpoint208)13484_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48"
              },
              {
                "label": "_value",
                "type": "t_uint208"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint208": {
            "label": "uint208"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Votes": [
            {
              "contract": "VotesUpgradeable",
              "label": "_delegatee",
              "type": "t_mapping(t_address,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\utils\\VotesUpgradeable.sol:41"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_delegateCheckpoints",
              "type": "t_mapping(t_address,t_struct(Trace208)13479_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\utils\\VotesUpgradeable.sol:43"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_totalCheckpoints",
              "type": "t_struct(Trace208)13479_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\utils\\VotesUpgradeable.sol:45"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "c11a72343db8aa032dca7131333b7aa9dfb95d4f3854f3a074fb0b81e89a3302": {
      "address": "0x0f12B130da377cC152484a9779FA72aB4B1Bf346",
      "txHash": "0x75e32df09a87b8120f4976b3c728b97c5522257645deb1a90bb622ef079d0788",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.TimelockController": [
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_timestamps",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\TimelockControllerUpgradeable.sol:33"
            },
            {
              "contract": "TimelockControllerUpgradeable",
              "label": "_minDelay",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\TimelockControllerUpgradeable.sol:34"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "25fadf76e97d47628384c3728f30d0f2aa15ec3d460ca6796301ea4312f3540f": {
      "address": "0x760A8C5b2A2F2ed4C2A0e0327402f7bc134a2E37",
      "txHash": "0x17704f7f7887c5cecd53b1d768178d4091cd27e6a4ebbaee7dcdce63ea37c3cb",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_proposerMode",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ProposerMode)16078",
            "contract": "REGGovernor",
            "src": "contracts\\REGGovernor.sol:33"
          },
          {
            "label": "_incentiveEnabled",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "REGGovernor",
            "src": "contracts\\REGGovernor.sol:35"
          },
          {
            "label": "_regIncentiveVault",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IREGIncentiveVault)16154",
            "contract": "REGGovernor",
            "src": "contracts\\REGGovernor.sol:37"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IREGIncentiveVault)16154": {
            "label": "contract IREGIncentiveVault",
            "numberOfBytes": "20"
          },
          "t_enum(ProposerMode)16078": {
            "label": "enum IREGGovernor.ProposerMode",
            "members": [
              "ProposerWithRole",
              "ProposerWithVotingPower",
              "ProposerWithRoleAndVotingPower",
              "ProposerWithRoleOrVotingPower"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(TimelockControllerUpgradeable)3419": {
            "label": "contract TimelockControllerUpgradeable"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Trace208)13479_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)13484_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Checkpoint208)13484_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]"
          },
          "t_struct(Checkpoint208)13484_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48"
              },
              {
                "label": "_value",
                "type": "t_uint208"
              }
            ]
          },
          "t_uint48": {
            "label": "uint48"
          },
          "t_uint208": {
            "label": "uint208"
          },
          "t_contract(IERC5805)8203": {
            "label": "contract IERC5805"
          },
          "t_mapping(t_uint256,t_struct(ProposalVote)3446_storage)": {
            "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)"
          },
          "t_struct(ProposalVote)3446_storage": {
            "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
            "members": [
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)436_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)"
          },
          "t_struct(ProposalCore)436_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "voteStart",
                "type": "t_uint48"
              },
              {
                "label": "voteDuration",
                "type": "t_uint32"
              },
              {
                "label": "executed",
                "type": "t_bool"
              },
              {
                "label": "canceled",
                "type": "t_bool"
              },
              {
                "label": "etaSeconds",
                "type": "t_uint48"
              }
            ]
          },
          "t_struct(Bytes32Deque)14539_storage": {
            "label": "struct DoubleEndedQueue.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_uint128"
              },
              {
                "label": "_end",
                "type": "t_uint128"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_uint128,t_bytes32)"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_uint128,t_bytes32)": {
            "label": "mapping(uint128 => bytes32)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorTimelockControl": [
            {
              "contract": "GovernorTimelockControlUpgradeable",
              "label": "_timelock",
              "type": "t_contract(TimelockControllerUpgradeable)3419",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\extensions\\GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "contract": "GovernorTimelockControlUpgradeable",
              "label": "_timelockIds",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\extensions\\GovernorTimelockControlUpgradeable.sol:34"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorVotesQuorumFraction": [
            {
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "label": "_quorumNumeratorHistory",
              "type": "t_struct(Trace208)13479_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\extensions\\GovernorVotesQuorumFractionUpgradeable.sol:20"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorVotes": [
            {
              "contract": "GovernorVotesUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC5805)8203",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\extensions\\GovernorVotesUpgradeable.sol:23"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorCountingSimple": [
            {
              "contract": "GovernorCountingSimpleUpgradeable",
              "label": "_proposalVotes",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)3446_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\extensions\\GovernorCountingSimpleUpgradeable.sol:31"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorSettings": [
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_proposalThreshold",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\extensions\\GovernorSettingsUpgradeable.sol:16"
            },
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_votingDelay",
              "type": "t_uint48",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\extensions\\GovernorSettingsUpgradeable.sol:18"
            },
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_votingPeriod",
              "type": "t_uint32",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\extensions\\GovernorSettingsUpgradeable.sol:20"
            }
          ],
          "erc7201:openzeppelin.storage.Governor": [
            {
              "contract": "GovernorUpgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\GovernorUpgradeable.sol:52"
            },
            {
              "contract": "GovernorUpgradeable",
              "label": "_proposals",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)436_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\GovernorUpgradeable.sol:54"
            },
            {
              "contract": "GovernorUpgradeable",
              "label": "_governanceCall",
              "type": "t_struct(Bytes32Deque)14539_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\governance\\GovernorUpgradeable.sol:60"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "707c5f8b5f3db9e2bbc39ef01f8f2252dd75b8e1b5736aee4c10f9f777c6fae4": {
      "address": "0x0376bDEEF7C9a839F720885997Bc8b4f1AfDf522",
      "txHash": "0x26aeb81b4bced5aec548284734768525cfc7c5fba770564b6025acf4485051fa",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_regGovernor",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "REGIncentiveVault",
            "src": "contracts\\REGIncentiveVault.sol:26"
          },
          {
            "label": "_regToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)9637",
            "contract": "REGIncentiveVault",
            "src": "contracts\\REGIncentiveVault.sol:28"
          },
          {
            "label": "_currentEpoch",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "REGIncentiveVault",
            "src": "contracts\\REGIncentiveVault.sol:30"
          },
          {
            "label": "_currentTotalDeposit",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "REGIncentiveVault",
            "src": "contracts\\REGIncentiveVault.sol:32"
          },
          {
            "label": "_userGlobalStates",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(UserGlobalState)18382_storage)",
            "contract": "REGIncentiveVault",
            "src": "contracts\\REGIncentiveVault.sol:35"
          },
          {
            "label": "_userEpochStates",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserEpochState)18390_storage))",
            "contract": "REGIncentiveVault",
            "src": "contracts\\REGIncentiveVault.sol:38"
          },
          {
            "label": "_epochStates",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(EpochState)18406_storage)",
            "contract": "REGIncentiveVault",
            "src": "contracts\\REGIncentiveVault.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)9637": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(UserEpochState)18390_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IREGIncentiveVault.UserEpochState))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserGlobalState)18382_storage)": {
            "label": "mapping(address => struct IREGIncentiveVault.UserGlobalState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EpochState)18406_storage)": {
            "label": "mapping(uint256 => struct IREGIncentiveVault.EpochState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UserEpochState)18390_storage)": {
            "label": "mapping(uint256 => struct IREGIncentiveVault.UserEpochState)",
            "numberOfBytes": "32"
          },
          "t_struct(EpochState)18406_storage": {
            "label": "struct IREGIncentiveVault.EpochState",
            "members": [
              {
                "label": "subscriptionStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "subscriptionEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriodEnd",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bonusToken",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalBonus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalWeights",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(UserEpochState)18390_storage": {
            "label": "struct IREGIncentiveVault.UserEpochState",
            "members": [
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UserGlobalState)18382_storage": {
            "label": "struct IREGIncentiveVault.UserGlobalState",
            "members": [
              {
                "label": "currentDeposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
